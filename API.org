
* Notes API interface
- URL
  http://127.0.0.1:8000/api/partsrequest/

- HTTP VERBS
  POST

- Data
  json

  #+BEGIN_EXAMPLE 
{
  "request_no": "申请单号", 
  "apply_type": "申请类型", 
  "material_type": "物料类型", 
  "apply_reason": "申请原因", 
  "employee": "领用人工号", 
  "cost_center": "成本中心", 
  "approver": ["批准领用人1", "批准领用人2"], 
  "request_date": "领用日期", 
  "details": [
     {
        "pn": "物料编号",
        "bin": "储存位置",
        "description": "备件名称",
        "qty": "领用数量"，
        "actual_qty": "实发数量",
        "unit": "物料单位",
        "over_plan_usage": "超过计划用量",
        "balance": "库存",
        "usage_by_once": "单次量大领用量",
        "remark": "备注"
     },
     { ... }
  ]
}
  #+END_EXAMPLE
  
* ipython

from dept.models import Employee
from dept.serializers import EmployeeRefSerializer
from rest_framework.renderers import JSONRenderer
from rest_framework.parsers import JSONParser
from rest_framework.compat import BytesIO

######################
# decode

# 1. employee
bohu = Employee.objects.filter(num='9527')[0]
# 2. decode to json
bohuser = EmployeeRefSerializer(bohu)
content = JSONRenderer().render(bohuser.data)


######################
# encode

# 1. json
bohujson = '{"num": "9527"}'
# 2. restore
bohudata = JSONParser().parse(BytesIO(bohujson))
bohuser = EmployeeRefSerializer(data=bohudata)
# 3.
bohuser.is_valid()
bohuser.object


partsrequest = PartsRequest(request_no='A201404001024',apply_type='app_type',material_type='mtype',apply_reason='aReason',employee='')

* Request
#+BEGIN_EXAMPLE 
  (env)jcchen@linux-60b7:/data/iproj/partsms> curl -X POST -d '{"request_no": "A201404001024", "apply_type": "app_type", "material_type": "mtype", "apply_reason": "aReason", "employee": "9527", "cost_center": "34E110", "approver": "[\\"9527\\", \\"9528\\"]", "request_date": "2014-08-27T12:30:00.000Z", "requestdetail_set": [{"pn": "110290", "bin": "L5A201", "description": "Gasket Retainer Ass", "qty": 10, "actual_qty": null, "unit": "pcs", "over_plan_usage": null, "balance": "100", "usage_by_once": null, "remark": ""}, {"pn": "110291", "bin": "E5B401", "description": "Gasket Retainer Ass", "qty": 5, "actual_qty": null, "unit": "pcs", "over_plan_usage": null, "balance": "50", "usage_by_once": null, "remark": ""}]}' -u bohu.tang:bohu.tang -v http://127.0.0.1:8000/api/partsrequest/
  * About to connect() to 127.0.0.1 port 8000 (#0)
  *   Trying 127.0.0.1...
  * Adding handle: conn: 0x1cd3440
  * Adding handle: send: 0
  * Adding handle: recv: 0
  * Curl_addHandleToPipeline: length: 1
  * - Conn 0 (0x1cd3440) send_pipe: 1, recv_pipe: 0
  * Connected to 127.0.0.1 (127.0.0.1) port 8000 (#0)
  * Server auth using Basic with user 'bohu.tang'
  > POST /api/partsrequest/ HTTP/1.1
  > Authorization: Basic Ym9odS50YW5nOmJvaHUudGFuZw==
  > User-Agent: curl/7.32.0
  > Host: 127.0.0.1:8000
  > Accept: */*
  > Content-Length: 658
  > Content-Type: application/x-www-form-urlencoded
  > 
  * upload completely sent off: 658 out of 658 bytes
  * HTTP 1.0, assume close after body
  < HTTP/1.0 400 BAD REQUEST
  < Date: Thu, 28 Aug 2014 14:44:56 GMT
  < Server: WSGIServer/0.1 Python/2.7.6
  < Vary: Accept, Cookie
  < X-Frame-Options: SAMEORIGIN
  < Content-Type: application/json
  < Allow: GET, POST, HEAD, OPTIONS
  < 
  * Closing connection 0
  {"apply_reason": ["\u8fd9\u4e2a\u5b57\u6bb5\u662f\u5fc5\u586b\u9879\u3002"], "apply_type": ["\u8fd9\u4e2a\u5b57\u6bb5\u662f\u5fc5\u586b\u9879\u3002"], "material_type": ["\u8fd9\u4e2a\u5b57\u6bb5\u662f\u5fc5\u586b\u9879\u3002"], "approver": ["\u8fd9\u4e2a\u5b57\u6bb5\u662f\u5fc5\u586b\u9879\u3002"], "requestdetail_set": ["\u8fd9\u4e2a\u5b57\u6bb5\u662f\u5fc5\u586b\u9879\u3002"], "employee": ["\u8fd9\u4e2a\u5b57\u6bb5\u662f\u5fc5\u586b\u9879\u3002"], "request_no": ["\u8fd9\u4e2a\u5b57\u6bb5\u662f\u5fc5\u586b\u9879\u3002"], "cost_center": ["\u8fd9\u4e2a\u5b57\u6bb5\u662f\u5fc5\u586b\u9879\u3002"]}
#+END_EXAMPLE

* Python invoke demo
#+BEGIN_SRC Python
  import urllib2, base64, pdb, traceback

  json_data = '{"request_no": "A201404001024", "apply_type": "app_type", "material_type": "mtype", "apply_reason": "aReason", "employee": "9527", "cost_center": "34E110", "approver": "[\\"9527\\", \\"9529\\"]", "request_date": "2014-08-27T12:30:00.000Z", "requestdetail_set": [{"pn": "110290", "bin": "L5A201", "description": "Gasket Retainer Ass", "qty": 10, "actual_qty": null, "unit": "pcs", "over_plan_usage": null, "balance": "100", "usage_by_once": null, "remark": ""}, {"pn": "110291", "bin": "E5B401", "description": "Gasket Retainer Ass", "qty": 5, "actual_qty": null, "unit": "pcs", "over_plan_usage": null, "balance": "50", "usage_by_once": null, "remark": ""}]}'

  url = 'http://127.0.0.1:8000/api/partsrequest/'
  # url = 'http://127.0.0.1:8000/auth/user/'
  req = urllib2.Request(url, data = json_data, headers = {'Content-Type':'application/json'})
  # req = urllib2.Request(url)

  username = 'bohu.tang'
  password = 'bohu.tang'
  cridential = base64.encodestring('%s:%s' % (username, password))[:-1]
  auth_header = "Basic %s" % cridential
  req.add_header("Authorization", auth_header)

  try:
      handle = urllib2.urlopen(req)
      resp = handle.read()
      handle.close()
  except IOError as e:
      if hasattr(e, 'code'):
          if e.code != 401:
              print 'We got another error'
              print e.code
              print e
          else:
              print e.headers
              print e.headers['www-authenticate']
#+END_SRC

  
